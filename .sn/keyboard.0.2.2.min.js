/*! RESOURCE: /scripts/libs/keyboardJS/keyboard.0.2.2.min.js */
(function(e, t) {
    if (typeof define === "function" && define.amd) {
        define(t)
    } else {
        var n = e.parent != null ? e.parent : e;
        n.k = n.KeyboardJS = t
    }
})(this, function(e, t, n) {
    function r(e, t, n) {
        if (e.addEventListener) {
            e.addEventListener(t, n, false)
        } else {
            e.attachEvent("on" + t, function(t) {
                return n.call(e, t)
            })
        }
    }

    function f() {
        var e = [];
        for (var t = a.length; t > -1; t -= 1) {
            if (a[t]) {
                var n = a[t];
                for (var r = 0; r < n.length; r += 1) {
                    var i = n[r],
                        s = true;
                    for (var u = 0; u < i.keys.length; u += 1) {
                        var f = i.keys[u];
                        if (o.indexOf(f) < 0) {
                            s = false
                        }
                    }
                    if (s) {
                        e.push(i)
                    }
                }
            }
        }
        return e
    }

    function l(e) {
        if (o < 1) {
            return true
        }
        var t = f(),
            n = [],
            r;
        for (var i = 0; i < t.length; i += 1) {
            var s = t[i],
                a = false;
            for (var l = 0; l < s.keys.length; l += 1) {
                var c = s.keys[l];
                if (n.indexOf(c) > -1) {
                    break
                }
            }
            if (!a) {
                if (typeof s.callback === "function") {
                    if (!s.callback(e, s.keys, s.keyCombo)) {
                        r = false
                    }
                }
                if (!u[s.keyCombo]) {
                    u[s.keyCombo] = [s]
                } else {
                    u[s.keyCombo].push(s)
                }
                for (var l = 0; l < s.keys.length; l += 1) {
                    var c = s.keys[l];
                    if (n.indexOf(c) < 0) {
                        n.push(c)
                    }
                }
            }
        }
        return r
    }

    function c(e) {
        var t = f();
        var n;
        for (var r in u) {
            if (u.hasOwnProperty(r)) {
                var i = u[r],
                    s = false;
                for (var o = 0; o < t.length; o += 1) {
                    var a = t[o].keyCombo;
                    if (a === r) {
                        s = true;
                        break
                    }
                }
                if (!s) {
                    var l = i != null ? i.length : 0;
                    for (var c = 0; c < l; c++) {
                        if (typeof i[c].endCallback === "function") {
                            if (!i[c].endCallback(e, i[c].keys, i[c].keyCombo)) {
                                n = false
                            }
                        }
                    }
                    delete u[r]
                }
            }
        }
        return n
    }

    function h(e, t, n) {
        function r() {
            if (o && o.length) {
                var e = a[o.length];
                if (e.indexOf(u) > -1) {
                    var t = a[o.length].indexOf(u);
                    a[o.length].splice(t, 1)
                }
            }
            return a
        }
        var i = e.toLowerCase().replace(/\s/g, "").split(",");
        for (var s = 0; s < i.length; s += 1) {
            var o = i[s].split("+");
            if (o.length) {
                if (!a[o.length]) {
                    a[o.length] = []
                }
                var u = {
                    callback: t,
                    endCallback: n,
                    keyCombo: i[s],
                    keys: o
                };
                a[o.length].push(u)
            }
        }
        return {
            clear: r
        }
    }

    function p(e, t, n, r, i) {
        function s() {
            if (typeof u === "function") {
                u()
            }
            if (typeof a === "function") {
                a()
            }
            if (typeof f === "function") {
                f()
            }
            if (typeof l === "function") {
                l()
            }
            if (typeof c === "function") {
                clearInterval(c)
            }
        }
        var o = [0, 0];
        if (typeof i !== "function") {
            return false
        }
        var u = h(e, function() {
            if (o[0] === 0) {
                o[0] = -1
            }
        }, function() {
            o[0] = 0
        }).clear;
        var a = h(t, function() {
            if (o[0] === 0) {
                o[0] = 1
            }
        }, function() {
            o[0] = 0
        }).clear;
        var f = h(n, function() {
            if (o[1] === 0) {
                o[1] = -1
            }
        }, function() {
            o[1] = 0
        }).clear;
        var l = h(r, function() {
            if (o[1] === 0) {
                o[1] = 1
            }
        }, function() {
            o[1] = 0
        }).clear;
        var c = setInterval(function() {
            if (o[0] === 0 && o[1] === 0) {
                return
            }
            i(o)
        }, 1);
        return {
            clear: s
        }
    }

    function d(e) {
        if (e === "all") {
            a = [];
            return
        }
        e = e.replace(/\s/g, "").split(",");
        for (var t = a.length; t > -1; t -= 1) {
            if (a[t]) {
                var n = a[t];
                for (var r = 0; r < n.length; r += 1) {
                    var i = n[r],
                        s = false;
                    for (var o = 0; o < i.keys.length; o += 1) {
                        var u = i.keys[o];
                        for (var f = 0; f < e.length; f += 1) {
                            var l = e[f];
                            if (l === u) {
                                s = true;
                                break
                            }
                        }
                        if (s) {
                            break
                        }
                    }
                    if (s) {
                        a[t].splice(r, 1);
                        r -= 1;
                        if (a[t].length < 1) {
                            delete a[t]
                        }
                    }
                }
            }
        }
    }

    function v() {
        return o
    }

    function m(e, t) {
        i[e] = t
    }

    function g(e) {
        if (i[e]) {
            s = i[e]
        }
    }[].indexOf || (Array.prototype.indexOf = function(e, t, n) {
        for (n = this.length, t = (n + ~~t) % n; t < n && (!(t in this) || this[t] !== e); t++);
        return t ^ n ? t : -1
    });
    var i = {
        us: {
            backspace: 8,
            tab: 9,
            enter: 13,
            shift: 16,
            ctrl: 17,
            alt: 18,
            pause: 19,
            "break": 19,
            capslock: 20,
            escape: 27,
            esc: 27,
            space: 32,
            spacebar: 32,
            pageup: 33,
            pagedown: 34,
            end: 35,
            home: 36,
            left: 37,
            up: 38,
            right: 39,
            down: 40,
            insert: 45,
            "delete": 46,
            0: 48,
            1: 49,
            2: 50,
            3: 51,
            4: 52,
            5: 53,
            6: 54,
            7: 55,
            8: 56,
            9: 57,
            a: 65,
            b: 66,
            c: 67,
            d: 68,
            e: 69,
            f: 70,
            g: 71,
            h: 72,
            i: 73,
            j: 74,
            k: 75,
            l: 76,
            m: 77,
            n: 78,
            o: 79,
            p: 80,
            q: 81,
            r: 82,
            s: 83,
            t: 84,
            u: 85,
            v: 86,
            w: 87,
            x: 88,
            y: 89,
            z: 90,
            meta: 91,
            command: 91,
            windows: 91,
            win: 91,
            _91: 92,
            select: 93,
            num0: 96,
            num1: 97,
            num2: 98,
            num3: 99,
            num4: 100,
            num5: 101,
            num6: 102,
            num7: 103,
            num8: 104,
            num9: 105,
            multiply: 106,
            add: 107,
            subtract: 109,
            decimal: 110,
            divide: 111,
            f1: 112,
            f2: 113,
            f3: 114,
            f4: 115,
            f5: 116,
            f6: 117,
            f7: 118,
            f8: 119,
            f9: 120,
            f10: 121,
            f11: 122,
            f12: 123,
            numlock: 144,
            num: 144,
            scrolllock: 145,
            scroll: 145,
            semicolon: 186,
            equal: 187,
            equalsign: 187,
            comma: 188,
            dash: 189,
            period: 190,
            slash: 191,
            forwardslash: 191,
            graveaccent: 192,
            openbracket: 219,
            backslash: 220,
            closebracket: 221,
            singlequote: 222
        }
    };
    var s = i["us"],
        o = [],
        u = {};
    var a = n != null ? n.keyBindingGroups : [];
    $j(e.document).bind("keydown.keyJS", function(e) {
        for (var t in s) {
            if (s.hasOwnProperty(t) && e.keyCode === s[t]) {
                if (o.indexOf(t) < 0) {
                    o.push(t)
                }
            }
        }
        return l(e)
    });
    $j(e.document).bind("keyup.keyJS", function(e) {
        for (var t in s) {
            if (s.hasOwnProperty(t) && e.keyCode === s[t]) {
                var n = o.indexOf(t);
                if (n > -1) {
                    o.splice(n, 1)
                }
            }
        }
        return c(e)
    });
    r(e, "blur", function(e) {
        o = [];
        return c(e)
    });
    return {
        bind: {
            key: h,
            axis: p
        },
        activeKeys: v,
        keyBindingGroups: a,
        unbind: {
            key: d
        },
        locale: {
            add: m,
            set: g
        },
        context: e,
        frame: t
    }
})