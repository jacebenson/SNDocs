{% extends 'base.njk' %}
{% block content %}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">


console.log('in script');
var versions = {{ versions | json | safe}}
        // Typical action to be performed when the document is ready:
      //       document.getElementById("demo").innerHTML = xHttp.responseText;
let params = new URLSearchParams(document.location.search.substring(1));
let urlVersions = parseInt(params.get("versions"), 10); // is the number 18
if(urlVersions>0){
    if(versions.length < urlVersions){

    } else {
    versions.length = urlVersions
    }
} else {
    versions.length = 10;
}
      //       var versions = (xHttp.responseText);
      var dtArray = versions.map(function (version, index) {
        var endDate = function () {
          console.log('index', index, 'versions.length', versions.length);
          if(version.endDate === null){
            return new Date();
          } else {
            return new Date(version.endDate)
          }
        }
      if (new Date(version.date) > endDate()) {
        console.log(version.name, "Error");
      } else {
        console.log(new Date(version.date), '<', endDate())
      }
      var family = version.name;
      var patch = version.name;
      var startDate = new Date(version.date);
      var endDateStr = endDate();
      return [
        //"Version",
        family,
        family,//parse patches later
        startDate,
        endDateStr
      ]
    });
    google.charts.load("current", { packages: ["timeline"] });
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
      var container = document.getElementById('example4.2');
      var chart = new google.visualization.Timeline(container);
      var dataTable = new google.visualization.DataTable();
      console.log(dtArray);
      dataTable.addColumn({ type: 'string', id: 'Role' });
      dataTable.addColumn({ type: 'string', id: 'Name' });
      dataTable.addColumn({ type: 'date', id: 'Start' });
      dataTable.addColumn({ type: 'date', id: 'End' });
      dataTable.addRows(
        /*[
          [ 'New York', 'Early Availability', new Date(1789, 3, 30), new Date(1797, 2, 4) ],
          [ 'New York', 'Patch 1', new Date(1797, 2, 4), new Date(1801, 2, 4) ],
          [ 'New York', 'Patch 2', new Date(1801, 2, 4), new Date(1809, 2, 4) ]]
          /*/
        dtArray
      );
      var options = {
        timeline: { groupByRowLabel: false }
      };
      chart.draw(dataTable, options);
    }


</script>
<div id="example4.2" style="height: 1000px;"></div>

{% endblock %}